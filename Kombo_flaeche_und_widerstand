import math


class Flaechenberechnung:

    def __init__(self, l, b):
        self.__laenge = l
        self.__breite = b

    def getFlaeche(self):
        __flaeche = round(self.__laenge * self.__breite, 3)
        return __flaeche


tuer = Flaechenberechnung(2.1, 0.85)
tuer_flaeche = tuer.getFlaeche()

fenster = Flaechenberechnung(1.4, 1.14)
fenster_flaeche = fenster.getFlaeche()

dachfenster = Flaechenberechnung(0.66, 0.98)
dachfenster_flaeche = dachfenster.getFlaeche()

boden = Flaechenberechnung(10,8)
boden_flaeche = boden.getFlaeche()

l_wand = Flaechenberechnung(10, 3.5)
l_wand_flaeche = l_wand.getFlaeche()-2*fenster_flaeche

k_wand = Flaechenberechnung(3.5 + 0.5 * 4.5, 8)
k_wand_flaeche = k_wand.getFlaeche() - fenster_flaeche - tuer_flaeche

dach = Flaechenberechnung(math.sqrt(4.5 ** 2 + (0.5 * 8) ** 2), 10)
dach_flaeche = dach.getFlaeche() - dachfenster_flaeche

class Waermewiderstand:

    def __init__(self, lambda_glas, s_fenster, status_styropor_wand, status_styropor_boden, status_styropor_dach,
                 s_styropor, tuer_flaeche, fenster_flaeche, dachfenster_flaeche, l_wand_flaeche, k_wand_flaeche,
                 dach_flaeche, boden_flaeche):
        self.boden_flaeche = boden_flaeche
        self.dach_flaeche = dach_flaeche
        self.k_wand_flaeche = k_wand_flaeche
        self.l_wand_flaeche = l_wand_flaeche
        self.dachfenster_flaeche = dachfenster_flaeche
        self.tuer_flaeche = tuer_flaeche
        self.fenster_flaeche = fenster_flaeche
        self.lambda_glas = lambda_glas
        self.s_fenster = s_fenster
        self.status_styropor_wand = status_styropor_wand
        self.status_styropor_boden = status_styropor_boden
        self.status_styropor_dach = status_styropor_dach
        self.s_styropor = s_styropor

        # Deklaration der Attribute die für alle Instanzen der class gelten
        self.s_putz = 0.025
        self.s_mauer = 0.115
        self.s_tuer = 0.06
        self.lambda_glas_tuer = 5.6
        self.lambda_putz = 0.85
        self.lambda_hochlochziegeln = 0.95
        self.lambda_styropor = 0.035

        self.r_lambda_dach = ((1 / self.r_lambda_pzs(status_styropor_dach, s_styropor, dach_flaeche)) + (
                1 / self.r_lambda(s_fenster,lambda_glas, dachfenster_flaeche))) ** (-1)
        
        self.r_lambda_k_wand = ((1 / self.r_lambda_pzs(status_styropor_wand, s_styropor, k_wand_flaeche)) + (
                1 / self.r_lambda(self.s_tuer, self.lambda_glas_tuer, tuer_flaeche)) + (
                    1 / self.r_lambda(s_fenster, lambda_glas, fenster_flaeche))) ** (-1)

        self.r_lambda_l_wand = ((1 / self.r_lambda_pzs(status_styropor_wand, s_styropor, l_wand_flaeche)) + (
                    2 / self.r_lambda(s_fenster, lambda_glas, fenster_flaeche))) ** (-1)

    # allgemeine Funktion zur Berechnung eines einzelnen Wärmewiderstandes
    def r_lambda(self, s, lambda_allgemein, flaeche):
        r_lambda = s / (lambda_allgemein * flaeche)
        return r_lambda

    # Berechung des Wärmewiderstandes, der oft benötigten Kombination Putz + Ziegel + Putz + evtl. Styropor
    def r_lambda_pzs(self, status_styropor, s_styropor, flaeche):
        r_lambda_pzs = self.r_lambda(self.s_putz, self.lambda_putz, flaeche) + \
                       self.r_lambda(self.s_mauer, self.lambda_hochlochziegeln, flaeche)
        if status_styropor == False:
            pass
        else:
            r_lambda_pzs += self.r_lambda(s_styropor, self.lambda_styropor, flaeche)
        return r_lambda_pzs

    def r_lambda_gesamt(self, lambda_glas, s_fenster, s_styropor):
        r_lambda_gesamt = ((2 / self.r_lambda_dach) + (2 / self.r_lambda_k_wand) + (2 / self.r_lambda_l_wand)) ** (-1)
        return r_lambda_gesamt
    
    def r_lambda_boden(self, status_styropor_boden, s_styropor, boden_flaeche):
        r_lambda_boden = self.r_lambda_pzs(status_styropor_boden, s_styropor, boden_flaeche)
        return r_lambda_boden


r_lambda_haus = Waermewiderstand(5.6, 0.004, False, False, False, 0.15, tuer_flaeche, fenster_flaeche,
                                 dachfenster_flaeche, l_wand_flaeche, k_wand_flaeche, dach_flaeche, boden_flaeche)
r_lambda_haus_ohne_boden = r_lambda_haus.r_lambda_gesamt(5.6, 0.004, 0.15)
print(r_lambda_haus_ohne_boden)
r_lambda_boden = r_lambda_haus.r_lambda_boden(False, 0.15, 80)
print(r_lambda_boden)
